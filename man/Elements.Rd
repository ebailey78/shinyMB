% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/Elements.R
\name{Elements}
\alias{Elements}
\alias{smAction}
\alias{smCheckbox}
\alias{smDivider}
\alias{smHeader}
\alias{smRadio}
\alias{smToggle}
\title{Dropdown Elements}
\usage{
smHeader(label)

smDivider()

smAction(id, label, icon)

smRadio(name, value, label, selected = FALSE)

smCheckbox(name, value, label, selected = FALSE)

smToggle(name, value, label, type = "checkbox", selected = FALSE)
}
\arguments{
\item{label}{The label to appear on the element}

\item{id}{The id of the action element}

\item{icon}{An optional \code{\link{icon}} object to add to the element}

\item{name}{A unique name for the group of elements.}

\item{value}{The value to return when this element is selected.}

\item{selected}{Should this element be selected at the start?}

\item{type}{The type of dropdown element to create.}
}
\description{
Basic elements to create dropdown menus in \code{shinyMenus}
}
\details{
Use these elements to create custom dropdown menus in your shiny apps. They can
be used within standard dropdowns, context menus, navbar dropdowns, or submenus.

\code{smHeader} adds a grey, unclickable header to your dropdown menu.
Use it help divide your dropdowns into meaningful subsets.

\code{smDivider} adds a light, horizontal line to your dropdown menu.
It can also help to divide you dropdowns into meaningful subsets.

\code{smAction} acts exactly like a native \code{\link{actionButton}}
or \code{\link{actionLink}} in \code{\link{shiny}}.

\code{smRadio} creates an individual radio dropdown input. When any
radio input with the same \code{name} attribute is selected by the user, all
other elements with the same \code{name} will be deselected, and the clicked
element will become selected. Reference the \code{smRadio}'s \code{name} attribute
to retrieve the value from within your Server logic. For example if
\code{name = "foo"}, then from the server, \code{input$foo} would retrieve the
value of the currently selected element within the \code{foo} group.

You can have more than one \code{smRadio} input with the same \code{name} and
\code{value}. Doing so will link these inputs so that if one becomes selected,
they will all become selected. This allows you to place options in several places
in your shiny app. For example, You could allow the user to change the units of the
displayed data from a dropdown in the navbar and from a context menu. These two
locations will update based on selections from the other and you will only have
to watch one \code{input} from your Server logic.

\code{smCheckbox} works the same as \code{smRadio} but allows for more
than one element from a group to be selected at once.

\code{smToggle} can create radio or checkbox elements depending on the
value of \code{type}. \code{smRadio} and \code{smCheckbox} are actually wrappers
for \code{smToggle} with \code{type} already specified. Create your dropdowns
however you like.
}

